{"ast":null,"code":"var _jsxFileName = \"/Users/s259285/heb-pizza/src/pages/Customer.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"../styles/Customer.scss\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Customer extends Component {\n  constructor() {\n    super();\n\n    this.uploadOrder = e => {\n      e.preventDefault();\n      const token = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE2MjY0NTU0NzMsIm5iZiI6MTYyNjQ1NTQ3MywianRpIjoiNDM5OGIxYWEtYWQzMy00OTBjLTkwNWMtY2NkZTQ0MDAyYjUzIiwiZXhwIjoxNjI2NDU2MzczLCJpZGVudGl0eSI6InRlc3QiLCJmcmVzaCI6ZmFsc2UsInR5cGUiOiJhY2Nlc3MifQ._1p9HBedxYt7DKPTCWPEc4E5S8HqKEq4TxKTOekHogU';\n\n      var axios = require('axios'); // var data = {\n      //   \"Crust\": this.state.crust, \n      //   \"Flavor\": this.state.flavor, \n      //   \"Size\": this.state.size, \n      //   \"Table_No\": this.state.table_no\n      // }\n\n\n      var headers = {\n        'Authorization': 'Bearer ' + token,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      };\n      axios.post('https://order-pizza-api.herokuapp.com/api/orders', data = {\n        \"Crust\": this.state.crust,\n        \"Flavor\": this.state.flavor,\n        \"Size\": this.state.size,\n        \"Table_No\": this.state.table_no\n      }, headers).then(function (response) {\n        console.log(response);\n\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error('Something went wrong');\n        }\n      }).catch(function (error) {\n        alert(error);\n      });\n    };\n\n    this.changeCrust = e => {\n      this.setState({\n        crust: e.target.value\n      });\n    };\n\n    this.changeFlavor = e => {\n      this.setState({\n        flavor: e.target.value\n      });\n    };\n\n    this.changeSize = e => {\n      this.setState({\n        size: e.target.value\n      });\n    };\n\n    this.changeTable = e => {\n      this.setState({\n        table_no: e.target.value\n      });\n    };\n\n    this.state = {\n      crust: \"\",\n      flavor: \"\",\n      size: \"\",\n      table_no: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"Form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Submit pizza order form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-class\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text\",\n            type: \"input\",\n            placeholder: \"crust\",\n            name: \"crust\",\n            id: \"crust\",\n            value: this.state.crust,\n            onChange: this.changeCrust,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"crust\",\n            className: \"label\",\n            children: \"Crust\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text\",\n            type: \"input\",\n            placeholder: \"flavor\",\n            name: \"flavor\",\n            id: \"flavor\",\n            value: this.state.flavor,\n            onChange: this.changeFlavor,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"flavor\",\n            className: \"label\",\n            children: \"Flavor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text\",\n            type: \"input\",\n            placeholder: \"size\",\n            name: \"size\",\n            id: \"size\",\n            value: this.state.size,\n            onChange: this.changeSize,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"size\",\n            className: \"label\",\n            children: \"Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text\",\n            type: \"number\",\n            placeholder: \"table\",\n            name: \"table\",\n            id: \"table\",\n            value: this.state.table_no,\n            onChange: this.changeTable,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"table\",\n            className: \"label\",\n            children: \"Table No.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit\",\n          onClick: this.uploadOrder,\n          children: \"Submit!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(Customer);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/s259285/heb-pizza/src/pages/Customer.js"],"names":["React","Component","withRouter","axios","Customer","constructor","uploadOrder","e","preventDefault","token","require","headers","post","data","state","crust","flavor","size","table_no","then","response","console","log","ok","json","Error","catch","error","alert","changeCrust","setState","target","value","changeFlavor","changeSize","changeTable","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"../styles/Customer.scss\";\nimport axios from \"axios\";\n\nclass Customer extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      crust: \"\",\n      flavor: \"\",\n      size: \"\",\n      table_no: 0\n    }\n  }\n\n  uploadOrder = (e) => {\n\n    e.preventDefault();\n\n    const token = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE2MjY0NTU0NzMsIm5iZiI6MTYyNjQ1NTQ3MywianRpIjoiNDM5OGIxYWEtYWQzMy00OTBjLTkwNWMtY2NkZTQ0MDAyYjUzIiwiZXhwIjoxNjI2NDU2MzczLCJpZGVudGl0eSI6InRlc3QiLCJmcmVzaCI6ZmFsc2UsInR5cGUiOiJhY2Nlc3MifQ._1p9HBedxYt7DKPTCWPEc4E5S8HqKEq4TxKTOekHogU';\n\n    var axios = require('axios');\n    // var data = {\n    //   \"Crust\": this.state.crust, \n    //   \"Flavor\": this.state.flavor, \n    //   \"Size\": this.state.size, \n    //   \"Table_No\": this.state.table_no\n    // }\n\n    var headers = {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n    }\n\n    axios.post('https://order-pizza-api.herokuapp.com/api/orders',\n      data = {\n        \"Crust\": this.state.crust, \n        \"Flavor\": this.state.flavor, \n        \"Size\": this.state.size, \n        \"Table_No\": this.state.table_no\n      },\n      headers)\n      .then(function (response) {\n        console.log(response)\n        if(response.ok) {\n          return response.json();\n        } else {\n          throw new Error('Something went wrong');\n        }\n      })\n      .catch(function (error) {\n        alert(error);\n      })\n  };\n\n  changeCrust = (e) => {\n    this.setState({\n      crust: e.target.value\n    })\n  }\n\n  changeFlavor = (e) => {\n    this.setState({\n      flavor: e.target.value\n    })\n  }\n\n  changeSize = (e) => {\n    this.setState({\n      size: e.target.value\n    })\n  }\n\n  changeTable = (e) => {\n    this.setState({\n      table_no: e.target.value\n    })\n  }\n\n  render() {\n    return (\n      <div id=\"Form\">\n        <h1>Submit pizza order form</h1>\n        <form className=\"form-class\">\n          <div className=\"group field\">\n            <input\n              className=\"text\"\n              type=\"input\"\n              placeholder=\"crust\"\n              name=\"crust\"\n              id=\"crust\"\n              value={this.state.crust}\n              onChange={this.changeCrust}\n              required\n            />\n            <label for=\"crust\" className=\"label\">\n              Crust\n            </label>\n          </div>\n          <div className=\"group field\">\n            <input\n              className=\"text\"\n              type=\"input\"\n              placeholder=\"flavor\"\n              name=\"flavor\"\n              id=\"flavor\"\n              value={this.state.flavor}\n              onChange={this.changeFlavor}\n              required\n            />\n            <label for=\"flavor\" className=\"label\">\n              Flavor\n            </label>\n          </div>\n          <div className=\"group field\">\n            <input\n              className=\"text\"\n              type=\"input\"\n              placeholder=\"size\"\n              name=\"size\"\n              id=\"size\"\n              value={this.state.size}\n              onChange={this.changeSize}\n              required\n            />\n            <label for=\"size\" className=\"label\">\n              Size\n            </label>\n          </div>\n          <div className=\"group field\">\n            <input\n              className=\"text\"\n              type=\"number\"\n              placeholder=\"table\"\n              name=\"table\"\n              id=\"table\"\n              value={this.state.table_no}\n              onChange={this.changeTable}\n              required\n            />\n            <label for=\"table\" className=\"label\">\n              Table No.\n            </label>\n          </div>\n          <button className=\"submit\" onClick={this.uploadOrder}>\n            Submit!\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Customer);\n"]},"metadata":{},"sourceType":"module"}