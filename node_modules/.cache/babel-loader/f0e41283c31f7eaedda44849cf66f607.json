{"ast":null,"code":"var _jsxFileName = \"/Users/s259285/heb-pizza/src/pages/Customer.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"../styles/Customer.scss\";\nimport axios from \"axios\"; // const api = axios.create({\n//   baseURL: \"https://order-pizza-api.herokuapp.com/api/orders\",\n// });\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Customer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      orders: [],\n      auth_token: \"\"\n    };\n\n    this.uploadOrder = e => {\n      let formClass = document.querySelector('.form-class');\n      const formData = new FormData();\n      e.preventDefault();\n      const access_token = \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE2MjYyMTAzOTEsIm5iZiI6MTYyNjIxMDM5MSwianRpIjoiZjkzMjBmNzEtMDM0ZC00MTg1LTgxZTYtNjBlZmU0NzI3NWJmIiwiZXhwIjoxNjI2MjExMjkxLCJpZGVudGl0eSI6InRlc3QiLCJmcmVzaCI6ZmFsc2UsInR5cGUiOiJhY2Nlc3MifQ.1A0DnzIQchlwEkpsSmzouWRSyaoIDbBhtokshOd_JHo\";\n      axios.post({\n        url: \"https://order-pizza-api.herokuapp.com/api/auth\",\n        auth: {\n          password: \"test\",\n          username: \"test\"\n        },\n        headers: {\n          'Authorization': 'tokn ${access_token}',\n          \"Content-type\": \"multipart/form-data\"\n        }\n      }).then(response => {\n        console.log(response.data);\n        this.props.history.push(\"./Success\");\n      }).catch(error => {\n        alert(\"Please try again \\n\" + error);\n      });\n      formClass.reset();\n    };\n  }\n\n  componentDidMount() {\n    var url = \"https://order-pizza-api.herokuapp.com/api/auth\";\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", url);\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n    xhr.setRequestHeader(\"Accept\", \"application/json\");\n\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState === 4) {\n        console.log(xhr.status);\n        console.log(xhr.responseText);\n      }\n    };\n\n    var data = `{ \n       \"password\": \"test\",\n       \"username\": \"test\"\n     }`;\n    xhr.send(data);\n    console.log(xhr.statusText);\n  } // function for uploading information into API\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"Form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Submit pizza order form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-class\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text\",\n            type: \"input\",\n            placeholder: \"crust\",\n            name: \"crust\",\n            id: \"crust\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"crust\",\n            className: \"label\",\n            children: \"Crust\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text\",\n            type: \"input\",\n            placeholder: \"flavor\",\n            name: \"flavor\",\n            id: \"flavor\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"flavor\",\n            className: \"label\",\n            children: \"Flavor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text\",\n            type: \"input\",\n            placeholder: \"size\",\n            name: \"size\",\n            id: \"size\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"size\",\n            className: \"label\",\n            children: \"Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text\",\n            type: \"number\",\n            placeholder: \"table\",\n            name: \"table\",\n            id: \"table\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"table\",\n            className: \"label\",\n            children: \"Table No.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit\",\n          onClick: this.uploadOrder,\n          children: \"Submit!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(Customer);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/s259285/heb-pizza/src/pages/Customer.js"],"names":["React","Component","withRouter","axios","Customer","constructor","state","orders","auth_token","uploadOrder","e","formClass","document","querySelector","formData","FormData","preventDefault","access_token","post","url","auth","password","username","headers","then","response","console","log","data","props","history","push","catch","error","alert","reset","componentDidMount","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","status","responseText","send","statusText","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"../styles/Customer.scss\";\nimport axios from \"axios\";\n\n// const api = axios.create({\n//   baseURL: \"https://order-pizza-api.herokuapp.com/api/orders\",\n// });\n\nclass Customer extends Component {\n  state = {\n    orders: [],\n    auth_token: \"\"\n  };\n\n  constructor() {\n    super();\n  }\n\n  componentDidMount() {\n    var url = \"https://order-pizza-api.herokuapp.com/api/auth\";\n\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", url);\n    \n    xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n    xhr.setRequestHeader(\"Accept\", \"application/json\");\n    \n    xhr.onreadystatechange = function () {\n       if (xhr.readyState === 4) {\n          console.log(xhr.status);\n          console.log(xhr.responseText);\n       }};\n    \n    var data = `{ \n       \"password\": \"test\",\n       \"username\": \"test\"\n     }`;\n    \n    xhr.send(data);\n    console.log(xhr.statusText);\n  }\n\n\n  // function for uploading information into API\n  uploadOrder = (e) => {\n    let formClass = document.querySelector('.form-class');\n    const formData = new FormData();\n    \n    e.preventDefault();\n\n    const access_token =\n      \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE2MjYyMTAzOTEsIm5iZiI6MTYyNjIxMDM5MSwianRpIjoiZjkzMjBmNzEtMDM0ZC00MTg1LTgxZTYtNjBlZmU0NzI3NWJmIiwiZXhwIjoxNjI2MjExMjkxLCJpZGVudGl0eSI6InRlc3QiLCJmcmVzaCI6ZmFsc2UsInR5cGUiOiJhY2Nlc3MifQ.1A0DnzIQchlwEkpsSmzouWRSyaoIDbBhtokshOd_JHo\";\n\n      axios.post({\n          url: \"https://order-pizza-api.herokuapp.com/api/auth\",\n          auth: {\n            password: \"test\",\n            username: \"test\"\n          },\n          headers: {\n              'Authorization': 'tokn ${access_token}',\n              \"Content-type\": \"multipart/form-data\"\n          }\n      })\n      .then(response => {\n          console.log(response.data);\n          this.props.history.push(\"./Success\");\n      })\n      .catch(error => {\n          alert(\"Please try again \\n\" + error);\n      })\n\n      formClass.reset();\n  };\n\n  render() {\n    return (\n      <div id=\"Form\">\n        <h1>Submit pizza order form</h1>\n        <form className=\"form-class\">\n          <div className=\"group field\">\n            <input\n              className=\"text\"\n              type=\"input\"\n              placeholder=\"crust\"\n              name=\"crust\"\n              id=\"crust\"\n              required\n            />\n            <label for=\"crust\" className=\"label\">\n              Crust\n            </label>\n          </div>\n          <div className=\"group field\">\n            <input\n              className=\"text\"\n              type=\"input\"\n              placeholder=\"flavor\"\n              name=\"flavor\"\n              id=\"flavor\"\n              required\n            />\n            <label for=\"flavor\" className=\"label\">\n              Flavor\n            </label>\n          </div>\n          <div className=\"group field\">\n            <input\n              className=\"text\"\n              type=\"input\"\n              placeholder=\"size\"\n              name=\"size\"\n              id=\"size\"\n              required\n            />\n            <label for=\"size\" className=\"label\">\n              Size\n            </label>\n          </div>\n          <div className=\"group field\">\n            <input\n              className=\"text\"\n              type=\"number\"\n              placeholder=\"table\"\n              name=\"table\"\n              id=\"table\"\n              required\n            />\n            <label for=\"table\" className=\"label\">\n              Table No.\n            </label>\n          </div>\n          <button className=\"submit\" onClick={this.uploadOrder}>\n            Submit!\n          </button>\n        </form>\n\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Customer);\n"]},"metadata":{},"sourceType":"module"}