{"ast":null,"code":"var _jsxFileName = \"/Users/s259285/heb-pizza/src/pages/Customer.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"../styles/Customer.scss\";\nimport axios from \"axios\"; // const api = axios.create({\n//   baseURL: \"https://order-pizza-api.herokuapp.com/api/orders\",\n// });\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Customer extends Component {\n  constructor() {\n    super();\n\n    this.uploadOrder = e => {\n      // let formClass = document.querySelector('.form-class');\n      // const formData = new FormData();\n      e.preventDefault(); //   axios.post({\n      //       url: \"https://order-pizza-api.herokuapp.com/api/auth\",\n      //       auth: {\n      //         password: \"test\",\n      //         username: \"test\"\n      //       },\n      //   })\n      //   .then(response => {\n      //     axios.post({\n      //         url: \"https://order-pizza-api.herokuapp.com/api/orders\",\n      //         data: formData,\n      //         headers: {\n      //             \"Content-type\": \"multipart/form-data\"\n      //         }\n      //     })\n      //     .then(response => {\n      //         console.log(response.data);\n      //         this.props.history.push(\"./Success\");\n      //     })\n      //     .catch(error => {\n      //         alert(\"Please try again (2)\\n\" + error);\n      //     })\n      //   })\n      //   .catch(error => {\n      //       alert(\"Please try again (1)\\n\" + error);\n      //   })\n      //   formClass.reset();\n\n      axios;\n      axios({\n        method: \"post\",\n        url: \"https://order-pizza-api.herokuapp.com/api/orders\",\n        data: {\n          \"Crust\": this.crust,\n          \"Flavor\": this.flavor,\n          \"Size\": this.size,\n          \"Table_No\": this.table_no\n        },\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        console.log(\"crust: \" + this.state.crust);\n        console.log(\"flavor: \" + this.state.flavor);\n        console.log(\"size: \" + this.state.size);\n        console.log(\"table: \" + this.state.table_no);\n      }).catch(error => {\n        alert(error);\n      });\n    };\n\n    this.changeCrust = e => {\n      this.setState({\n        crust: e.target.value\n      });\n    };\n\n    this.changeFlavor = e => {\n      this.setState({\n        flavor: e.target.value\n      });\n    };\n\n    this.changeSize = e => {\n      this.setState({\n        size: e.target.value\n      });\n    };\n\n    this.changeTable = e => {\n      this.setState({\n        table_no: e.target.value\n      });\n    };\n\n    this.state = {\n      crust: \"\",\n      flavor: \"\",\n      size: \"\",\n      table_no: 0\n    };\n  } // function for uploading information into API\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"Form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Submit pizza order form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-class\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text\",\n            type: \"input\",\n            placeholder: \"crust\",\n            name: \"crust\",\n            id: \"crust\",\n            value: this.state.crust,\n            onChange: this.changeCrust,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"crust\",\n            className: \"label\",\n            children: \"Crust\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text\",\n            type: \"input\",\n            placeholder: \"flavor\",\n            name: \"flavor\",\n            id: \"flavor\",\n            value: this.state.flavor,\n            onChange: this.changeFlavor,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"flavor\",\n            className: \"label\",\n            children: \"Flavor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text\",\n            type: \"input\",\n            placeholder: \"size\",\n            name: \"size\",\n            id: \"size\",\n            value: this.state.size,\n            onChange: this.changeSize,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"size\",\n            className: \"label\",\n            children: \"Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text\",\n            type: \"number\",\n            placeholder: \"table\",\n            name: \"table\",\n            id: \"table\",\n            value: this.state.table_no,\n            onChange: this.changeTable,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"table\",\n            className: \"label\",\n            children: \"Table No.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit\",\n          onClick: this.uploadOrder,\n          children: \"Submit!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(Customer);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/s259285/heb-pizza/src/pages/Customer.js"],"names":["React","Component","withRouter","axios","Customer","constructor","uploadOrder","e","preventDefault","method","url","data","crust","flavor","size","table_no","headers","then","res","console","log","state","catch","error","alert","changeCrust","setState","target","value","changeFlavor","changeSize","changeTable","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"../styles/Customer.scss\";\nimport axios from \"axios\";\n\n// const api = axios.create({\n//   baseURL: \"https://order-pizza-api.herokuapp.com/api/orders\",\n// });\n\nclass Customer extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      crust: \"\",\n      flavor: \"\",\n      size: \"\",\n      table_no: 0\n    }\n  }\n\n  // function for uploading information into API\n  uploadOrder = (e) => {\n    // let formClass = document.querySelector('.form-class');\n    // const formData = new FormData();\n\n    e.preventDefault();\n\n    //   axios.post({\n    //       url: \"https://order-pizza-api.herokuapp.com/api/auth\",\n    //       auth: {\n    //         password: \"test\",\n    //         username: \"test\"\n    //       },\n    //   })\n    //   .then(response => {\n    //     axios.post({\n    //         url: \"https://order-pizza-api.herokuapp.com/api/orders\",\n    //         data: formData,\n    //         headers: {\n    //             \"Content-type\": \"multipart/form-data\"\n    //         }\n    //     })\n    //     .then(response => {\n    //         console.log(response.data);\n    //         this.props.history.push(\"./Success\");\n    //     })\n    //     .catch(error => {\n    //         alert(\"Please try again (2)\\n\" + error);\n    //     })\n    //   })\n    //   .catch(error => {\n    //       alert(\"Please try again (1)\\n\" + error);\n    //   })\n\n    //   formClass.reset();\n\n    axios\n    \n\n    axios({\n      method: \"post\",\n      url: \"https://order-pizza-api.herokuapp.com/api/orders\",\n      data: {\n        \"Crust\": this.crust,\n        \"Flavor\": this.flavor,\n        \"Size\": this.size,\n        \"Table_No\": this.table_no\n      },\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n    .then(res => {\n      console.log(\"crust: \" + this.state.crust)\n      console.log(\"flavor: \" + this.state.flavor)\n      console.log(\"size: \" + this.state.size)\n      console.log(\"table: \" + this.state.table_no)\n    })\n    .catch(error => {\n      alert(error);\n    })\n  };\n\n  changeCrust = (e) => {\n    this.setState({\n      crust: e.target.value\n    })\n  }\n\n  changeFlavor = (e) => {\n    this.setState({\n      flavor: e.target.value\n    })\n  }\n\n  changeSize = (e) => {\n    this.setState({\n      size: e.target.value\n    })\n  }\n\n  changeTable = (e) => {\n    this.setState({\n      table_no: e.target.value\n    })\n  }\n\n  render() {\n    return (\n      <div id=\"Form\">\n        <h1>Submit pizza order form</h1>\n        <form className=\"form-class\">\n          <div className=\"group field\">\n            <input\n              className=\"text\"\n              type=\"input\"\n              placeholder=\"crust\"\n              name=\"crust\"\n              id=\"crust\"\n              value={this.state.crust}\n              onChange={this.changeCrust}\n              required\n            />\n            <label for=\"crust\" className=\"label\">\n              Crust\n            </label>\n          </div>\n          <div className=\"group field\">\n            <input\n              className=\"text\"\n              type=\"input\"\n              placeholder=\"flavor\"\n              name=\"flavor\"\n              id=\"flavor\"\n              value={this.state.flavor}\n              onChange={this.changeFlavor}\n              required\n            />\n            <label for=\"flavor\" className=\"label\">\n              Flavor\n            </label>\n          </div>\n          <div className=\"group field\">\n            <input\n              className=\"text\"\n              type=\"input\"\n              placeholder=\"size\"\n              name=\"size\"\n              id=\"size\"\n              value={this.state.size}\n              onChange={this.changeSize}\n              required\n            />\n            <label for=\"size\" className=\"label\">\n              Size\n            </label>\n          </div>\n          <div className=\"group field\">\n            <input\n              className=\"text\"\n              type=\"number\"\n              placeholder=\"table\"\n              name=\"table\"\n              id=\"table\"\n              value={this.state.table_no}\n              onChange={this.changeTable}\n              required\n            />\n            <label for=\"table\" className=\"label\">\n              Table No.\n            </label>\n          </div>\n          <button className=\"submit\" onClick={this.uploadOrder}>\n            Submit!\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Customer);\n"]},"metadata":{},"sourceType":"module"}