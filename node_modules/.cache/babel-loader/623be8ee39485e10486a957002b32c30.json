{"ast":null,"code":"var _jsxFileName = \"/Users/s259285/heb-pizza/src/pages/Customer.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"../styles/Customer.scss\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Customer extends Component {\n  constructor() {\n    super();\n\n    this.uploadOrder = e => {\n      e.preventDefault();\n      var formData = new FormData();\n      formData.append('Crust', this.state.crust);\n      formData.append('Flavor', this.state.flavor);\n      formData.append('Size', this.state.size);\n      formData.append('Table_No', this.state.table_no);\n      const headers_order = {\n        headers: {\n          'Authorization': 'Bearer ' + this.state.token,\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        }\n      };\n      var order_data = {\n        Crust: \"\" + this.state.crust,\n        Flavor: \"\" + this.state.flavor,\n        Size: \"\" + this.state.size,\n        Table_No: this.state.table_no\n      };\n\n      var axios = require(\"axios\");\n\n      axios.post(\"https://order-pizza-api.herokuapp.com/api/orders\", {\n        data: data\n      }, headers_order).then(response => {\n        console.log(response);\n      }).catch(error => {\n        alert(error.message);\n      });\n    };\n\n    this.changeCrust = e => {\n      this.setState({\n        crust: e.target.value\n      });\n    };\n\n    this.changeFlavor = e => {\n      this.setState({\n        flavor: e.target.value\n      });\n    };\n\n    this.changeSize = e => {\n      this.setState({\n        size: e.target.value\n      });\n    };\n\n    this.changeTable = e => {\n      this.setState({\n        table_no: e.target.value\n      });\n    };\n\n    this.state = {\n      crust: \"\",\n      flavor: \"\",\n      size: \"\",\n      table_no: 0,\n      token: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const headers_auth = {\n      \"password\": \"test\",\n      \"username\": \"test\",\n      \"Content-Type\": \"application/json\",\n      \"Accept\": \"application/json\"\n    };\n    axios.post(\"https://order-pizza-api.herokuapp.com/api/auth\", headers_auth).then(response => {\n      console.log(response);\n      this.setState({\n        token: response.data.access_token\n      });\n    }).catch(error => {\n      console.log(\"error with auth\");\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"Form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Submit pizza order form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-class\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text\",\n            type: \"input\",\n            placeholder: \"crust\",\n            name: \"crust\",\n            id: \"crust\",\n            value: this.state.crust,\n            onChange: this.changeCrust,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"crust\",\n            className: \"label\",\n            children: \"Crust\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text\",\n            type: \"input\",\n            placeholder: \"flavor\",\n            name: \"flavor\",\n            id: \"flavor\",\n            value: this.state.flavor,\n            onChange: this.changeFlavor,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"flavor\",\n            className: \"label\",\n            children: \"Flavor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text\",\n            type: \"input\",\n            placeholder: \"size\",\n            name: \"size\",\n            id: \"size\",\n            value: this.state.size,\n            onChange: this.changeSize,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"size\",\n            className: \"label\",\n            children: \"Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text\",\n            type: \"number\",\n            placeholder: \"table\",\n            name: \"table\",\n            id: \"table\",\n            value: this.state.table_no,\n            onChange: this.changeTable,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"table\",\n            className: \"label\",\n            children: \"Table No.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit\",\n          onClick: this.uploadOrder,\n          children: \"Submit!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(Customer);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/s259285/heb-pizza/src/pages/Customer.js"],"names":["React","Component","withRouter","axios","Customer","constructor","uploadOrder","e","preventDefault","formData","FormData","append","state","crust","flavor","size","table_no","headers_order","headers","token","order_data","Crust","Flavor","Size","Table_No","require","post","data","then","response","console","log","catch","error","alert","message","changeCrust","setState","target","value","changeFlavor","changeSize","changeTable","componentDidMount","headers_auth","access_token","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"../styles/Customer.scss\";\nimport axios from \"axios\";\n\nclass Customer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      crust: \"\",\n      flavor: \"\",\n      size: \"\",\n      table_no: 0,\n      token: \"\",\n    };\n  }\n\n  componentDidMount() {\n    const headers_auth = {\n      \"password\": \"test\",\n      \"username\": \"test\",\n      \"Content-Type\": \"application/json\",\n      \"Accept\": \"application/json\",\n    };\n\n    axios\n      .post(\"https://order-pizza-api.herokuapp.com/api/auth\", headers_auth)\n      .then((response) => {\n        console.log(response);\n        this.setState({\n          token: response.data.access_token,\n        });\n      })\n      .catch((error) => {\n        console.log(\"error with auth\");\n      });\n\n  }\n\n  uploadOrder = (e) => {\n    e.preventDefault();\n\n    var formData = new FormData();\n    formData.append('Crust', this.state.crust);\n    formData.append('Flavor', this.state.flavor);\n    formData.append('Size', this.state.size);\n    formData.append('Table_No', this.state.table_no);\n\n    const headers_order = {\n      headers: {\n        'Authorization': 'Bearer ' + this.state.token,\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\",\n      }\n    };\n\n    var order_data = {\n      Crust: \"\" + this.state.crust,\n      Flavor: \"\" + this.state.flavor,\n      Size: \"\" + this.state.size,\n      Table_No: this.state.table_no\n    }\n\n    var axios = require(\"axios\");\n\n    axios\n      .post(\"https://order-pizza-api.herokuapp.com/api/orders\", {\n      data: data\n      }, headers_order)\n      .then((response) => {\n        console.log(response);\n\n      })\n      .catch((error) => {\n        alert(error.message);\n      });\n  };\n\n  changeCrust = (e) => {\n    this.setState({\n      crust: e.target.value,\n    });\n  };\n\n  changeFlavor = (e) => {\n    this.setState({\n      flavor: e.target.value,\n    });\n  };\n\n  changeSize = (e) => {\n    this.setState({\n      size: e.target.value,\n    });\n  };\n\n  changeTable = (e) => {\n    this.setState({\n      table_no: e.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <div id=\"Form\">\n        <h1>Submit pizza order form</h1>\n        <form className=\"form-class\">\n          <div className=\"group field\">\n            <input\n              className=\"text\"\n              type=\"input\"\n              placeholder=\"crust\"\n              name=\"crust\"\n              id=\"crust\"\n              value={this.state.crust}\n              onChange={this.changeCrust}\n              required\n            />\n            <label for=\"crust\" className=\"label\">\n              Crust\n            </label>\n          </div>\n          <div className=\"group field\">\n            <input\n              className=\"text\"\n              type=\"input\"\n              placeholder=\"flavor\"\n              name=\"flavor\"\n              id=\"flavor\"\n              value={this.state.flavor}\n              onChange={this.changeFlavor}\n              required\n            />\n            <label for=\"flavor\" className=\"label\">\n              Flavor\n            </label>\n          </div>\n          <div className=\"group field\">\n            <input\n              className=\"text\"\n              type=\"input\"\n              placeholder=\"size\"\n              name=\"size\"\n              id=\"size\"\n              value={this.state.size}\n              onChange={this.changeSize}\n              required\n            />\n            <label for=\"size\" className=\"label\">\n              Size\n            </label>\n          </div>\n          <div className=\"group field\">\n            <input\n              className=\"text\"\n              type=\"number\"\n              placeholder=\"table\"\n              name=\"table\"\n              id=\"table\"\n              value={this.state.table_no}\n              onChange={this.changeTable}\n              required\n            />\n            <label for=\"table\" className=\"label\">\n              Table No.\n            </label>\n          </div>\n          <button className=\"submit\" onClick={this.uploadOrder}>\n            Submit!\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Customer);\n"]},"metadata":{},"sourceType":"module"}