{"ast":null,"code":"var _jsxFileName = \"/Users/s259285/heb-pizza/src/pages/Customer.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"../styles/Customer.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Customer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getLatest = () => {\n      const access_token = \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE2MjYyMTAzOTEsIm5iZiI6MTYyNjIxMDM5MSwianRpIjoiZjkzMjBmNzEtMDM0ZC00MTg1LTgxZTYtNjBlZmU0NzI3NWJmIiwiZXhwIjoxNjI2MjExMjkxLCJpZGVudGl0eSI6InRlc3QiLCJmcmVzaCI6ZmFsc2UsInR5cGUiOiJhY2Nlc3MifQ.1A0DnzIQchlwEkpsSmzouWRSyaoIDbBhtokshOd_JHo\";\n      fetch(\"https://order-pizza-api.herokuapp.com/api/orders\").then(res => res.json()).then(result => {\n        this.setState({\n          pizza: result\n        });\n      }).catch(error => console.error(error));\n    };\n\n    this.uploadOrder = e => {\n      const access_token = \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE2MjYyMTAzOTEsIm5iZiI6MTYyNjIxMDM5MSwianRpIjoiZjkzMjBmNzEtMDM0ZC00MTg1LTgxZTYtNjBlZmU0NzI3NWJmIiwiZXhwIjoxNjI2MjExMjkxLCJpZGVudGl0eSI6InRlc3QiLCJmcmVzaCI6ZmFsc2UsInR5cGUiOiJhY2Nlc3MifQ.1A0DnzIQchlwEkpsSmzouWRSyaoIDbBhtokshOd_JHo\";\n      fetch(\"https://order-pizza-api.herokuapp.com/api/orders\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          access_token\n        })\n      }).then(res => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          alert(\"error\");\n        }\n      }) //   .then(json => {\n      //       this.setState\n      //   })\n      .catch(error => console.error(error));\n    };\n\n    this.state = {\n      pizza: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"Form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Submit pizza order form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-class\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text\",\n            type: \"input\",\n            placeholder: \"crust\",\n            name: \"crust\",\n            id: \"crust\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"crust\",\n            class: \"label\",\n            children: \"Crust\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text\",\n            type: \"input\",\n            placeholder: \"flavor\",\n            name: \"flavor\",\n            id: \"flavor\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"flavor\",\n            class: \"label\",\n            children: \"Flavor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text\",\n            type: \"input\",\n            placeholder: \"size\",\n            name: \"size\",\n            id: \"size\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"size\",\n            class: \"label\",\n            children: \"Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text\",\n            type: \"number\",\n            placeholder: \"table\",\n            name: \"table\",\n            id: \"table\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"table\",\n            class: \"label\",\n            children: \"Table No.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit\",\n          onClick: this.uploadOrder,\n          children: \"Submit!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Crust\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Flavor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Size\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Table no.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.pizza.map(piz => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: piz.Crust\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: piz.Flavor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: piz.Size\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: piz.Table_No\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this)]\n          }, piz.Crust, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(Customer);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/s259285/heb-pizza/src/pages/Customer.js"],"names":["React","Component","withRouter","Customer","constructor","props","getLatest","access_token","fetch","then","res","json","result","setState","pizza","catch","error","console","uploadOrder","e","method","headers","Accept","body","JSON","stringify","ok","alert","state","render","map","piz","Crust","Flavor","Size","Table_No"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"../styles/Customer.scss\";\n\nclass Customer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pizza: [],\n    };\n  }\n\n  getLatest = () => {\n    const access_token =\n    \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE2MjYyMTAzOTEsIm5iZiI6MTYyNjIxMDM5MSwianRpIjoiZjkzMjBmNzEtMDM0ZC00MTg1LTgxZTYtNjBlZmU0NzI3NWJmIiwiZXhwIjoxNjI2MjExMjkxLCJpZGVudGl0eSI6InRlc3QiLCJmcmVzaCI6ZmFsc2UsInR5cGUiOiJhY2Nlc3MifQ.1A0DnzIQchlwEkpsSmzouWRSyaoIDbBhtokshOd_JHo\";\n\n    fetch(\"https://order-pizza-api.herokuapp.com/api/orders\")\n      .then((res) => res.json())\n      .then((result) => {\n        this.setState({\n          pizza: result,\n        });\n      })\n      .catch((error) => console.error(error));\n  }\n\n  // function for uploading information into API\n  uploadOrder = (e) => {\n    const access_token =\n      \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE2MjYyMTAzOTEsIm5iZiI6MTYyNjIxMDM5MSwianRpIjoiZjkzMjBmNzEtMDM0ZC00MTg1LTgxZTYtNjBlZmU0NzI3NWJmIiwiZXhwIjoxNjI2MjExMjkxLCJpZGVudGl0eSI6InRlc3QiLCJmcmVzaCI6ZmFsc2UsInR5cGUiOiJhY2Nlc3MifQ.1A0DnzIQchlwEkpsSmzouWRSyaoIDbBhtokshOd_JHo\";\n\n    fetch(\"https://order-pizza-api.herokuapp.com/api/orders\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        access_token,\n      }),\n    })\n      .then(res => {\n          if(res.ok) {\n              return res.json();\n          } else {\n              alert(\"error\");\n          }\n      })\n    //   .then(json => {\n    //       this.setState\n    //   })\n      .catch((error) => console.error(error));\n  };\n\n  render() {\n    return (\n      <div id=\"Form\">\n        <h1>Submit pizza order form</h1>\n        <form className=\"form-class\">\n          <div className=\"group field\">\n            <input\n              className=\"text\"\n              type=\"input\"\n              placeholder=\"crust\"\n              name=\"crust\"\n              id=\"crust\"\n              required\n            />\n            <label for=\"crust\" class=\"label\">\n              Crust\n            </label>\n          </div>\n          <div className=\"group field\">\n            <input\n              className=\"text\"\n              type=\"input\"\n              placeholder=\"flavor\"\n              name=\"flavor\"\n              id=\"flavor\"\n              required\n            />\n            <label for=\"flavor\" class=\"label\">\n              Flavor\n            </label>\n          </div>\n          <div className=\"group field\">\n            <input\n              className=\"text\"\n              type=\"input\"\n              placeholder=\"size\"\n              name=\"size\"\n              id=\"size\"\n              required\n            />\n            <label for=\"size\" class=\"label\">\n              Size\n            </label>\n          </div>\n          <div className=\"group field\">\n            <input\n              className=\"text\"\n              type=\"number\"\n              placeholder=\"table\"\n              name=\"table\"\n              id=\"table\"\n              required\n            />\n            <label for=\"table\" class=\"label\">\n              Table No.\n            </label>\n          </div>\n          <button className=\"submit\" onClick={this.uploadOrder}>\n            Submit!\n          </button>\n        </form>\n        <table>\n          <thead>\n            <tr>\n              <th>Crust</th>\n              <th>Flavor</th>\n              <th>Size</th>\n              <th>Table no.</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.pizza.map((piz) => (\n              <tr key={piz.Crust}>\n                <td>{piz.Crust}</td>\n                <td>{piz.Flavor}</td>\n                <td>{piz.Size}</td>\n                <td>{piz.Table_No}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Customer);\n"]},"metadata":{},"sourceType":"module"}