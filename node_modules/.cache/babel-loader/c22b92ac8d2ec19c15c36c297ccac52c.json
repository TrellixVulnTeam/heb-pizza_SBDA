{"ast":null,"code":"var _jsxFileName = \"/Users/s259285/heb-pizza/src/pages/Customer.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"../styles/Customer.scss\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Customer extends Component {\n  constructor() {\n    super();\n\n    this.uploadOrder = e => {\n      e.preventDefault();\n\n      const axios = require(\"axios\");\n\n      const headers_order = {\n        headers: {\n          Authorization: \"Bearer \" + this.state.token,\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      axios.post(\"https://order-pizza-api.herokuapp.com/api/orders\", {\n        Crust: this.state.crust,\n        Flavor: this.state.flavor,\n        Size: this.state.size,\n        Table_No: this.state.table_no\n      }, headers_order).then(response => {\n        console.log(response);\n        this.setState({\n          order_no: response.data.Order_ID\n        });\n        alert(\"Order number \" + this.state.order_no + \" is confirmed. \\n Crust: \" + this.state.crust + \"\\n Flavor: \" + this.state.flavor + \"\\n Size: \" + this.state.size + \"\\n Table Number: \" + this.state.table_no + \"\\n Thank you!\");\n      }).catch(error => {\n        alert(error.message);\n      });\n    };\n\n    this.changeCrust = e => {\n      this.setState({\n        crust: e.target.value\n      });\n    };\n\n    this.changeFlavor = e => {\n      this.setState({\n        flavor: e.target.value\n      });\n    };\n\n    this.changeSize = e => {\n      this.setState({\n        size: e.target.value\n      });\n    };\n\n    this.changeTable = e => {\n      this.setState({\n        table_no: e.target.value\n      });\n    };\n\n    this.state = {\n      crust: \"\",\n      flavor: \"\",\n      size: \"\",\n      table_no: 0,\n      order_no: 0\n    };\n  }\n\n  componentDidMount() {\n    const headers_auth = {\n      password: \"test\",\n      username: \"test\",\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    };\n    axios.post(\"https://order-pizza-api.herokuapp.com/api/auth\", headers_auth).then(response => {\n      console.log(response);\n      this.setState({\n        token: response.data.access_token\n      });\n    }).catch(error => {\n      console.log(\"error with auth\");\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"Form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Submit pizza order form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-class\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text\",\n            type: \"input\",\n            placeholder: \"crust\",\n            name: \"crust\",\n            id: \"crust\",\n            value: this.state.crust,\n            onChange: this.changeCrust,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"crust\",\n            className: \"label\",\n            children: \"Crust\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text\",\n            type: \"input\",\n            placeholder: \"flavor\",\n            name: \"flavor\",\n            id: \"flavor\",\n            value: this.state.flavor,\n            onChange: this.changeFlavor,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"flavor\",\n            className: \"label\",\n            children: \"Flavor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text\",\n            type: \"input\",\n            placeholder: \"size\",\n            name: \"size\",\n            id: \"size\",\n            value: this.state.size,\n            onChange: this.changeSize,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"size\",\n            className: \"label\",\n            children: \"Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text\",\n            type: \"number\",\n            placeholder: \"table\",\n            name: \"table\",\n            id: \"table\",\n            value: this.state.table_no,\n            onChange: this.changeTable,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"table\",\n            className: \"label\",\n            children: \"Table No.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit\",\n          onClick: this.uploadOrder,\n          children: \"Submit!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(Customer);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/s259285/heb-pizza/src/pages/Customer.js"],"names":["React","Component","withRouter","axios","Customer","constructor","uploadOrder","e","preventDefault","require","headers_order","headers","Authorization","state","token","post","Crust","crust","Flavor","flavor","Size","size","Table_No","table_no","then","response","console","log","setState","order_no","data","Order_ID","alert","catch","error","message","changeCrust","target","value","changeFlavor","changeSize","changeTable","componentDidMount","headers_auth","password","username","Accept","access_token","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"../styles/Customer.scss\";\nimport axios from \"axios\";\n\nclass Customer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      crust: \"\",\n      flavor: \"\",\n      size: \"\",\n      table_no: 0,\n\n      order_no: 0,\n    };\n  }\n\n  componentDidMount() {\n    const headers_auth = {\n      password: \"test\",\n      username: \"test\",\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    };\n\n    axios\n      .post(\"https://order-pizza-api.herokuapp.com/api/auth\", headers_auth)\n      .then((response) => {\n        console.log(response);\n        this.setState({\n          token: response.data.access_token,\n        });\n      })\n      .catch((error) => {\n        console.log(\"error with auth\");\n      });\n  }\n\n  uploadOrder = (e) => {\n    e.preventDefault();\n\n    const axios = require(\"axios\");\n\n    const headers_order = {\n      headers: {\n        Authorization: \"Bearer \" + this.state.token,\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    axios\n      .post(\n        \"https://order-pizza-api.herokuapp.com/api/orders\",\n        {\n          Crust: this.state.crust,\n          Flavor: this.state.flavor,\n          Size: this.state.size,\n          Table_No: this.state.table_no\n        },\n        headers_order\n      )\n      .then((response) => {\n        console.log(response);\n        this.setState({\n          order_no: response.data.Order_ID,\n        });\n        alert(\n          \"Order number \" +\n            this.state.order_no +\n            \" is confirmed. \\n Crust: \" +\n            this.state.crust +\n            \"\\n Flavor: \" +\n            this.state.flavor +\n            \"\\n Size: \" +\n            this.state.size +\n            \"\\n Table Number: \" +\n            this.state.table_no +\n            \"\\n Thank you!\"\n        );\n      })\n      .catch((error) => {\n        alert(error.message);\n      });\n  };\n\n  changeCrust = (e) => {\n    this.setState({\n      crust: e.target.value,\n    });\n  };\n\n  changeFlavor = (e) => {\n    this.setState({\n      flavor: e.target.value,\n    });\n  };\n\n  changeSize = (e) => {\n    this.setState({\n      size: e.target.value,\n    });\n  };\n\n  changeTable = (e) => {\n    this.setState({\n      table_no: e.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <div id=\"Form\">\n        <h1>Submit pizza order form</h1>\n        <form className=\"form-class\">\n          <div className=\"group field\">\n            <input\n              className=\"text\"\n              type=\"input\"\n              placeholder=\"crust\"\n              name=\"crust\"\n              id=\"crust\"\n              value={this.state.crust}\n              onChange={this.changeCrust}\n              required\n            />\n            <label for=\"crust\" className=\"label\">\n              Crust\n            </label>\n          </div>\n          <div className=\"group field\">\n            <input\n              className=\"text\"\n              type=\"input\"\n              placeholder=\"flavor\"\n              name=\"flavor\"\n              id=\"flavor\"\n              value={this.state.flavor}\n              onChange={this.changeFlavor}\n              required\n            />\n            <label for=\"flavor\" className=\"label\">\n              Flavor\n            </label>\n          </div>\n          <div className=\"group field\">\n            <input\n              className=\"text\"\n              type=\"input\"\n              placeholder=\"size\"\n              name=\"size\"\n              id=\"size\"\n              value={this.state.size}\n              onChange={this.changeSize}\n              required\n            />\n            <label for=\"size\" className=\"label\">\n              Size\n            </label>\n          </div>\n          <div className=\"group field\">\n            <input\n              className=\"text\"\n              type=\"number\"\n              placeholder=\"table\"\n              name=\"table\"\n              id=\"table\"\n              value={this.state.table_no}\n              onChange={this.changeTable}\n              required\n            />\n            <label for=\"table\" className=\"label\">\n              Table No.\n            </label>\n          </div>\n          <button className=\"submit\" onClick={this.uploadOrder}>\n            Submit!\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Customer);\n"]},"metadata":{},"sourceType":"module"}